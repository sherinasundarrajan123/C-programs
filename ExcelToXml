import java.io.File;
import java.io.FileInputStream;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

public class ExcelToXml {
	
	public static void updateXml(String fileName) throws Exception{
		FileInputStream file = new FileInputStream(new File("C:\\\\Users\\\\797956\\\\Documents\\\\XmlToExcel\\\\"+fileName+".xlsx"));
        XSSFWorkbook workbook = new XSSFWorkbook(file);
        XSSFSheet sheet = workbook.getSheetAt(0);
//    	int flag=0;
    	FileInputStream refFile = new FileInputStream(new File("C:\\\\Users\\\\797956\\\\Documents\\\\XmlToExcel\\\\Reference.xlsx"));
        XSSFWorkbook refWorkbook = new XSSFWorkbook(refFile);
        XSSFSheet refSheet = refWorkbook.getSheetAt(0);
        
        File xmlFile = new File("C:\\Users\\797956\\Documents\\XmlToExcel\\"+fileName+".xml");
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
        Document doc = dBuilder.parse(xmlFile);
        
        NodeList list1=doc.getElementsByTagName("section");
        
        Row refRow;
        Row row;
        Cell refCell;
        Cell cell;
//        int i=1,j=0;
//        while(i<=refSheet.getLastRowNum() && i<=sheet.getLastRowNum())
//        {
//        	j=0;
//        	while(j<=2)
//        	{
//        		System.out.println("Row = "+i+" Cell = "+j);
//        		System.out.println(refSheet.getRow(i).getCell(j));
//        		System.out.println(sheet.getRow(i).getCell(j));
//        		System.out.println("");
//        		j++;
//        	}
//        	i++;
//        }
        
        int i=1,j=0,iter,flag=0;
        System.out.println("sheet Last Row Num= "+sheet.getLastRowNum()+" RefSheet last row num = "+refSheet.getLastRowNum());
//        if(sheet.getLastRowNum()<=refSheet.getLastRowNum())
//        {
        while(i<=refSheet.getLastRowNum() && i<sheet.getLastRowNum())
        {
        	row=sheet.getRow(i);
        	j=0;
        	while(j<3)
        	{
        		cell=row.getCell(j);
        		if(cell.getCellStyle().getFillBackgroundColor()==(IndexedColors.CORAL.getIndex()))
        		{
        			System.out.println("Colour Entry....row = "+i+" cell = "+j);
        			refRow=refSheet.getRow(i);
        			refCell=refRow.getCell(j);
        			String replaceVal=refCell.getStringCellValue();
        			switch(j)
        			{
        			case 0:
        				System.out.println("Case 0");
        				
        				for(iter=0;iter<list1.getLength();iter++)
        				{
        					if(list1.item(iter).getAttributes().getNamedItem("name").getNodeValue().equals(sheet.getRow(i).getCell(j).getStringCellValue()))
        					{
        						Element ele=(Element)list1.item(iter);
        						NodeList list2=ele.getElementsByTagName("subsection");
        						for(int jter=0;jter<list2.getLength();jter++)
        						{
        							if(list2.item(jter).getAttributes().getNamedItem("name").getNodeValue().equals(sheet.getRow(i).getCell(j+1).getStringCellValue()))
        							{
        								Element ele1=(Element)list2.item(jter);
        								NodeList list3=ele1.getElementsByTagName("column");
        								for(int kter=0;kter<list3.getLength();kter++)
        								{
                							if(list3.item(kter).getAttributes().getNamedItem("name").getNodeValue().equals(sheet.getRow(i).getCell(j+2).getStringCellValue()))
                							{
                								NamedNodeMap attr = list1.item(iter).getAttributes();
                        						Node nodeAttr = attr.getNamedItem("name");
                        						nodeAttr.setTextContent(replaceVal);
//                								list3.item(kter).getAttributes().getNamedItem("name").setTextContent(replaceVal);
                								System.out.println("Replace 2");
                								break;
                							}
        								}
        							}
        						}
        					}
        				}
        				
//        				for(int iter=0;iter<list1.getLength();iter++)
//        				{
//        					if(list1.item(iter).getAttributes().getNamedItem("name").getNodeValue().equals(cell.getStringCellValue()))
//        					{
//        						NamedNodeMap attr = list1.item(iter).getAttributes();
//        						Node nodeAttr = attr.getNamedItem("name");
//        						nodeAttr.setTextContent(replaceVal);
////        						list1.item(iter).getAttributes().getNamedItem("name").setTextContent(replaceVal);
//        						System.out.println("Replace");
//        					}
//        					
//        				}
        				break;
        			case 1:
        				System.out.println("Case 1");
        				
        				for(iter=0,flag=0;iter<list1.getLength();iter++)
        				{
        					if(list1.item(iter).getAttributes().getNamedItem("name").getNodeValue().equals(sheet.getRow(i).getCell(j-1).getStringCellValue()))
        					{
        						Element ele=(Element)list1.item(iter);
        						NodeList list2=ele.getElementsByTagName("subsection");
        						for(int jter=0;jter<list2.getLength() && flag==0;jter++)
        						{
        							if(list2.item(jter).getAttributes().getNamedItem("name").getNodeValue().equals(sheet.getRow(i).getCell(j).getStringCellValue()))
        							{
        								Element ele1=(Element)list2.item(jter);
        								NodeList list3=ele1.getElementsByTagName("column");
        								for(int kter=0;kter<list3.getLength()&&flag==0;kter++)
        								{
                							if(list3.item(kter).getAttributes().getNamedItem("name").getNodeValue().equals(sheet.getRow(i).getCell(j+1).getStringCellValue()))
                							{
                								NamedNodeMap attr = list2.item(jter).getAttributes();
                        						Node nodeAttr = attr.getNamedItem("name");
                        						nodeAttr.setTextContent(replaceVal);
//                								list3.item(kter).getAttributes().getNamedItem("name").setTextContent(replaceVal);
                								System.out.println("Replace 1");
                								flag=1;
                								break;
                							}
        								}
        							}
        						}
        					}
        				}
        				
//        				for(int iter=0;iter<list1.getLength();iter++)
//        				{
//        					flag=0;
//        					if(list1.item(iter).getAttributes().getNamedItem("name").getNodeValue().equals(sheet.getRow(i).getCell(j-1).getStringCellValue()))
//        					{
//        						Element ele=(Element)list1.item(iter);
//        						NodeList list2=ele.getElementsByTagName("subsection");
//        						for(int jter=0;jter<list2.getLength();jter++)
//        						{
//        							if(list2.item(jter).getAttributes().getNamedItem("name").getNodeValue().equals(cell.getStringCellValue()))
//        							{
////        								System.out.println("i== "+i+" j == "+j);
//        								NamedNodeMap attr = list2.item(jter).getAttributes();
//                						Node nodeAttr = attr.getNamedItem("name");
//                						nodeAttr.setTextContent(replaceVal);
////        								list2.item(jter).getAttributes().getNamedItem("name").setTextContent(replaceVal);
//        								System.out.println("Replace 1");
//        								flag=1;
//        								break;
//        							}
//        						}
//        					}
//        					if(flag==1)
//        						break;
//        				}
        				break;
        			case 2:
        				System.out.println("Case 2");
        				for(iter=0,flag=0;iter<list1.getLength();iter++)
        				{
        					if(list1.item(iter).getAttributes().getNamedItem("name").getNodeValue().equals(sheet.getRow(i).getCell(j-2).getStringCellValue()))
        					{
        						Element ele=(Element)list1.item(iter);
        						NodeList list2=ele.getElementsByTagName("subsection");
        						for(int jter=0;jter<list2.getLength() && flag==0;jter++)
        						{
        							if(list2.item(jter).getAttributes().getNamedItem("name").getNodeValue().equals(sheet.getRow(i).getCell(j-1).getStringCellValue()))
        							{
        								Element ele1=(Element)list2.item(jter);
        								NodeList list3=ele1.getElementsByTagName("column");
        								for(int kter=0;kter<list3.getLength() && flag==0;kter++)
        								{
                							if(list3.item(kter).getAttributes().getNamedItem("name").getNodeValue().equals(cell.getStringCellValue()))
                							{
                								NamedNodeMap attr = list3.item(kter).getAttributes();
                        						Node nodeAttr = attr.getNamedItem("name");
                        						nodeAttr.setTextContent(replaceVal);
//                								list3.item(kter).getAttributes().getNamedItem("name").setTextContent(replaceVal);
                								System.out.println("Replace 2");
                								flag=1;
                								break;
                							}
        								}
        							}
        						}
        					}
        				}
        				break;
        			}
        		}
        		else
        		{
        			System.out.println("*****No change*****");
        		}
        		j++;	
        	}
        	i++;
        }
        TransformerFactory transformerFactory = TransformerFactory.newInstance();
		Transformer transformer = transformerFactory.newTransformer();
		DOMSource source = new DOMSource(doc);
		StreamResult result = new StreamResult(new File("C:\\Users\\797956\\Documents\\XmlToExcel\\"+fileName+"1.xml"));
		transformer.transform(source, result);
//        }
//        else
//        {
//        	System.out.println("Less rows");
//        }

//		System.out.println("Done");
    	
    }

}
